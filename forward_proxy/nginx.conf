# One worker process per vCPU.
worker_processes 2;

events {
  worker_connections 1024;
  multi_accept on;
}

http {
  include mime.types;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  keepalive_timeout 650;
  keepalive_requests 10000;
  #
  # Override some buffer limitations, will prevent DDOS too.
  #
  client_body_buffer_size 10K;
  client_header_buffer_size 1k;
  client_max_body_size 8m;
  large_client_header_buffers 2 1k;
  
  #
  # Allow the server to close the connection after a client stops
  # responding.
  # Frees up socket-associated memory.
  #
  reset_timedout_connection on;

  server {
    listen 80 reuseport;

    access_log /dev/stdout;
    error_log  /dev/stderr;

    resolver 1.1.1.1 ipv6=off;

    proxy_connect;
    proxy_connect_allow           80 443 563;
    proxy_connect_connect_timeout 20s;
    proxy_connect_read_timeout    20s;
    proxy_connect_send_timeout    20s;
    proxy_buffering on;

    location /hc {
      return 200 'healthy';
    }

    location / {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "";

      proxy_pass http://$host;
    }
  }
}